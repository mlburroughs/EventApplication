version: '3.4'

networks:
  frontend:
  backend:

services:
  mssqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment: 
     ACCEPT_EULA: Y
     SA_PASSWORD: Event@API
    ports:
     - "1448:1433"
    container_name: eventssqlserver
    networks:
     - backend

  tokensqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment:
      ACCEPT_EULA: Y
      SA_PASSWORD: ProductApi(!)
    ports:
      - "1449:1433"
    container_name: eventtokensqlserver
    networks:
      - backend
  
  ordersqlserver:
    image: "mcr.microsoft.com/mssql/server:latest"
    environment: 
     ACCEPT_EULA: Y
     SA_PASSWORD: Event@API
    ports:
     - "1450:1433"
    container_name: eventsordersqlserver
    networks:
     - backend

  eventcatalogapi:
    image: events/eventscatalogapi
    build:
      context: ./EventCatalogAPI
      dockerfile: Dockerfile
    environment:
      Externalbaseurl: http://localhost:7000
      DatabaseServer: mssqlserver
      DatabaseName: EventCatalog
      DatabaseUser: sa
      DatabasePassword: Event@API
    ports:
      - "7000:80"
    container_name: eventscatalogapi
    networks:
      - frontend
      - backend
    depends_on:
      - mssqlserver

  order:
    image: events/orderapi
    build:
      context: ./OrderAPI
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      IdentityUrl: http://192.168.86.29:7800
      DatabaseServer: ordersqlserver
      DatabaseName: OrdersDb
      DatabaseUser: sa
      DatabasePassword: Event@API
    ports:
      - "7020:80"
    container_name: eventsorderapi
    networks:
      - frontend
      - backend
    depends_on:
      - tokenserver
      - ordersqlserver

  webmvc:
    image: events/webmvc
    build:
      context: .\WebMVC
      dockerfile: Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      EventCatalogUrl: http://eventcatalogapi
      IdentityUrl: http://192.168.86.29:7800
      CallBackUrl: http://localhost:7500
    ports:
      - "7500:80"
    networks:
      - frontend
    container_name: eventcatalogweb
    depends_on:
     - eventcatalogapi
     - tokenserver
  
  tokenserver:
    build:
      context: .\TokenServiceAPI
      dockerfile: Dockerfile
    image: events/tokenapi
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      MvcClient: http://localhost:7500
      BasketApiClient: http://localhost:7510
      OrderApiClient: http://localhost:7520
    ports:
      - "7800:80"
    container_name: tokenserviceapi
    networks:
      - backend
      - frontend
    depends_on:
      - tokensqlserver

       



       
   
     